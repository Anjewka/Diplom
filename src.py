import math
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from matplotlib import animation
import matplotlib.cbook as cbook
import os
from PIL import Image

# (взяты из П.2 В.И. Крылов Основы теории движения ИСЗ)
# a = 6678245 #(метры) большая полуось
a = 6678000 #(метры) большая полуось
e = 0#0.00000000001         #Эксцентриситет
i = 0.0001          #(градусы) наклонение орбиты
Ω_0 = 0           #(град) долгота восходящего узла
ω_0 = 0   #(град) начальный угол наклона вектора скорости к экватору(аргумент перигея)
M_0 = 32.6650111#32.6650111    #(град) средняя аномалия в эпоху кеплеровой орбиты
t_0 = 26300#26300         #(с) начальный момент времени (в этом месте в книге опечатка(26300)
t = 27000#28500#2.823  
step = 0.01
α = math.pi / 4
OSC_Arr = []

delta_t = 0.011  #Время экспозиции
# α = math.pi / 4 #Угол между осью OZ в ОСК и ССК (угол крена)
d = 1.5         #Фокусное расстояние пластины(милиметры)

#(c^-1) суммарная угловая скорость (угловая скорость вращения Земли (период оборота Земли в секундах - 86344) и прецессии узла орбиты)
w_z = 2 * math.pi / 86344

#Постоянные для вычисления географической долготы
S_g = 18.9#30            #(град) звездное время по Гринвичу
eps = 0.40596358    #(рад) угол между плоскостью эклиптики и экваториальной плоскостью (23.26 градуса)

m = 5.9722 * 10 ** 24  #(кг) масса Земли
f = 6.6743151515 * 10 ** (-11) #((метры)^3 * c^(-2) * кг^(-1)) постоянная притяжения
R = 6378245#155 #(метры) радиус Земли
step = 0.001#10 #Шаг(промежуток)

f_m = f * m #Геоцентрическая гравитационная постоянная(метры заменены на милиметры)
n_0 = (f_m / ( (a ** 3))) ** (1 / 2) #(с^(-1) среднее движение
T = 2 * math.pi / n_0 #(с) период обращения ИСЗ
p = a * (1 - e ** 2) #(метры/10**k) фокальный параметр орбиты

#Массив для постоения графиков
dolg = []
shir = []

#Массивы в прямоугольных координатах для хранения точек
dataSet = []
dataSet_2 = [[], [], []]
dataSet_3 = [[], [], []]
dataSet_4 = [[], [], []]

tt = np.linspace(t_0, t, int((t - t_0) // step))

longitude = [] #Долгота
latitude = [] #Широта

x_trace = [] #Трасса камеры спутника на земле
y_trace = []

O2 = []     #Массив точек спутника в ИСК

#Скорости точек пластины КСК для построения поля скоростей
V_x = []
V_y = []
V_x_old = []
V_y_old = []
V_x_alpha = []
V_y_alpha = []
V_x_new_no_alpha = []
V_y_new_no_alpha = []
V_x_new = []
V_y_new = []

#Скорости точек пластины КСК для построения и дальнейшей проверки поля скоростей
V_check_x = []
V_check_y = []

e_point_x = []
e_point_y = []
e_point_z = []

coords_plane2 = []
coords_x = []
coords_y = []

#определение ПСЗ линейки
a0 = 0.063524#0.072#180#72   #1/2 длины ПЗС линейки по оси Oy(метры)
b0 = 0.007854#0.0076#40#7.6  #1/2 длины ПЗС линейки по оси Оx(метры)
n0 = 13     #число точек по оси Oy (берем нечетные для удобства)
m0 = 8      #число точек по оси Оx

a0 = 0.063524#0.072#180#72   #1/2 длины ПЗС линейки по оси Oy(метры)
b0 = 0.007854#0.0076#40#7.6  #1/2 длины ПЗС линейки по оси Оx(метры)
n1 = 2 * a0 / (n0 - 1)   #шаг по оси Оy
m1 = 2 * b0 / (m0 - 1)   #шаг по оси Ox

n1 = 2 * a0 / (n0 - 1)   #шаг по оси Оx
m1 = 2 * b0 / (m0 - 1)   #шаг по оси Oy
l0 = int((n0*m0-1)/2) #номер точки центра ПЗС линейки

cwd = os.getcwd() #Для доступа к директории в одной папке с файлом .py
with cbook.get_sample_data('%s/map.jpg'%(cwd)) as image_file:
    image = plt.imread(image_file)

earth_dots = []

fsk_centers = []

research_1 = [[], []]
research_2 = [[], []]

maxAB = []